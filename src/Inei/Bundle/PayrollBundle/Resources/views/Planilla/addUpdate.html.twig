{% extends 'IneiAuthBundle:Secured:index.html.twig' %}
{% if form %}
{% form_theme form.payrolls 'IneiPayrollBundle:Form:form_table_horizontal_layout.html.twig' %}
{% endif %}
{% block csspage %}
<style type="text/css">        
        td.column-monto{
            width: 150px;
        }
        td.column-nombre{
            width: 200px;
        }
        td.column-descripcion{
            width: 200px;
        }
        td.column-item{
            width: 30px;
            font-size: 26px;
        }
        td#col0{
            width: 200px;
        }
    </style>
{% endblock %}
{% block form %}
    <div class="span10">
    
        <div class="modal">
            <div class="modal-header">

                <h3>Registrar Planillas</h3>
            </div>
            <div class="modal-body">
                {% for flashMessage in app.session.flashbag.get('planilla') %}
            <div class="alert alert-{% if 'error' in flashMessage %}error{% else %}success{% endif %}">
                <button type="button" class="close" data-dismiss="alert">&times;</button>
                {{ flashMessage }}
            </div>
        {% endfor %}
                <div class="row-fluid">
                    <div class="span7">
                    {{ form_start(sform) }}
                        <div class="span1">{{ form_label(sform.tomo) }}</div>
                        <div class="span2">{{ form_widget(sform.tomo) }}</div>
                        <div class="span1">{{ form_label(sform.folio) }}</div>
                        <div class="span2">{{ form_widget(sform.folio) }}</div>
                        <div class="span2">{{ form_widget(sform.buscar) }}</div>
                        {% if usuario_service.hasPermission('planilla', 'other') %}
                        <div class="span2"><input type="button" value="Imprimir" id="imprimir" class="btn btn-primary"/></div>
                        {% endif %}
                    {{ form_end(sform) }}
                    </div>
                </div>{% if folio %}
                <div class="row-fluid">
                    <div class="span12"><h4>Información del Folio</h4></div></div>
                    <div class="row-fluid"><div class="span12">                            
                    <div class="span2"> <h2>{{ folio.tomo }}</h2> </div>
                    <div class="span2"> <h2>FOLIO - {{ folio.folio }}</h2> </div>
                    <div class="span3"> <h2>REGISTROS:</h4> </div><div class="span1"> <h2>{{ folio.registrosFolio }}</h2> </div>
                    <div class="span4"><b id="feedback"></b></div>
                    </div></div>
                
                    {% endif %}

         {% if form %}
                    <b id="mensaje" ></b>
             {{ form_start(form) }}
                    <table id="tplanillas" class="table table-bordered">
                        <thead></thead>
                        <tbody data-prototype="{{ form_widget(form.payrolls.vars.prototype)|e }}">
            {% for planilla in form.payrolls%}
                {{ form_widget(planilla) }}
            {% endfor %}</tbody>
                    </table>
                    {% if folio %}<input type ="hidden" value="{{ folio.folio }}" name ="folio">
                    <input type ="hidden" value="{{ folio.tomo.codiTomo }}" name ="tomo">{% endif %}
               {% else %}
                    <br><br>
                    <b>ES UN FOLIO DE RESUMEN O ES POSIBLE QUE NO ESTE REGISTRADO</b>
                    {% endif %}
                    <div class="modal-footer">
                        {% if form %} {{ form_widget(form.save) }}{{ form_end(form) }}{% endif %}
                        <a href="{{ path('_admin') }}" class="btn">Cerrar</a>
                    </div>
                    </div>
                            
                </div>
     
            </div>
{% endblock %}
{% block js %}
<script src="{{ asset('bundles/inei/prototype.js') }}" type="text/javascript"></script>
<script type="text/javascript">
    jQuery.noConflict();
// $j is now an alias to the jQuery function; creating the new alias is optional.
    
    
    function loadColumns() {
        var form = jQuery(jQuery('#tplanillas tbody').data('prototype'));
        var collectionColumns = jQuery('#tplanillas thead');
        var columns = jQuery('<tr></tr>');
        var column = null;
        jQuery.each(form.find('td'), function(index, field) {
            field = jQuery(field);
            column = jQuery('<th id="col'+index+'"></th>');
            column.html(field.find('*').data('title'));
            columns.append(column);
        });
        column = jQuery('<th>REGISTRO</th>');
        columns.prepend(column);
        collectionColumns.append(columns);
    }
    function indexar() {
        var rows = jQuery('#tplanillas tbody').find('tr');
        jQuery.each(rows, function(i, v){
            var reg = jQuery(v).find('input[name*="registro"]');
            reg.val(i);
            var $td = jQuery('<td class="column-item">'+(i+1)+'</td>');
            jQuery(v).prepend($td);
        });
    }
    function resumen(){
        var cols = jQuery('#tplanillas tbody tr:eq(0) td').length;
        var fresumen= jQuery('<tr></tr>');
        var colsr='';
        for(i=0;i<cols;i++){
            colsr +='<td>&nbsp;</td>';
        }
        fresumen.append(colsr);
        jQuery('#tplanillas tbody').append(fresumen);
    }
    
    function calculaTotales(){
        /*var resumen = jQuery('#tplanillas tbody tr:last');
        var rows = jQuery('#tplanillas tbody tr'),
                filas=rows.length;
        jQuery.each(rows, function(k, v){
            if(k<(filas-1)){
                var cols = jQuery(v).find('td.column-monto'),
                total = 0,
                valor = 0;
                jQuery.each(cols, function(i, c){
                    valor = jQuery(c).find('input[type="text"]').val();
                    total += isNaN(valor)?0:parseFloat(valor);
               });
               resumen.find('td:eq('+k+')').html(total);
            }
        });*/
    }
    
    function loadFolios(tomo) {
        var $folios = jQuery('#registrar_planilla_folio');
        $folios.empty();
        jQuery.get('{{ path('_inventario_folio_ajax') }}', {"tomo": tomo}, function(json) {
            jQuery.each(json, function(k, v) {
                $folios.append(jQuery('<option value=' + k + '>' + v + '</option>'));
            });
        });
    }
    jQuery(document).ready(function() {
        loadColumns();
        indexar();
        jQuery('#registrar_planilla_tomo').on('change', function(e) {
            loadFolios(jQuery(this).val());
        });
        jQuery('#registrar_planilla_folio').keypress(function(e) {
            if(e.which === 13) {
                jQuery('#registrar_planilla_buscar').click();
            }
        });
        activateNextRow();
        resumen();
    });
    
    jQuery('.nombre').on('keypress', function(e){
        e.preventDefault();
        if(e.which === 13){
            //jQuery(this).parent().next().find('textarea').focus();
            jQuery('.monto:eq(0)').focus();
        }
    });
    
    jQuery('.monto').on('keypress', function(e){
        e.preventDefault();
        if(e.which === 13){
            if(jQuery(this).val().indexOf('+')!==-1){
                var value = jQuery(this).val(),
                numbers=value.split('+'),
                total=0;
                for(i=0; i< numbers.length;i++){
                    total += isNaN(numbers[i])?0:parseFloat(numbers[i]);
                }
                jQuery(this).val(total.toFixed(2));
            }
            jQuery(this).parent().next().find('input[type="text"]:eq(0)').focus();
            calculaTotales();
        }
    });
    
    function activateNextRow(){
        var rows = jQuery('#tplanillas tbody tr');
        var c_rows = rows.length-1;
        jQuery.each(rows, function(k, v){
           var $lastcol = jQuery(v).find('td:last');
           var $txt = $lastcol.find('input[type="text"]');
           if(k<c_rows){
                $txt.keypress(function(e) {
                    if(e.which === 13) {
                        jQuery(v).next().find('input[type="text"]:eq(0)').focus();
                        var iScroll = jQuery(window).scrollTop();
                        iScroll = iScroll + 40;
                        jQuery('html, body').animate({  scrollTop: iScroll }, 200);
                        return false;
                    }
                });
           }
        });
    }

    jQuery('form:eq(1)').on('submit', function(e){
        return confirm('¿Esta seguro que desea modificar este registro?');
    });
    
    jQuery('#imprimir').on('click', function(event){
        event.preventDefault();
        var data = $('form_consulta').serialize(),
        url = '{{ path('_planilla_print') }}?';
        location.href = url+data;
    });
    
    function sendForm(){
        //Event.stop(event);
        var data = Form.serialize("form_planilla");
        var oOptions = {  
            method: "POST",  
            parameters: data,  
            asynchronous: true,
            //frequency: 15,
            //decay: 1,
            onFailure: function (oXHR) {  
                $('feedback').update(oXHR.statusText);  
            },  
            onLoading: function (oXHR) {  
                $('feedback').update('Guardando ...');  
            },                            
            onSuccess: function(oXHR) {  
               $('feedback').update(oXHR.responseText);
               data = Form.serialize("form_planilla");
            }                 
        };  
        new Ajax.Updater('feedback', "{{ path('_planilla_autosave') }}", oOptions);
    }
    /*document.observe('dom:loaded', function() {
        //Event.observe('form_save', 'click', sendForm, false);  
        sendForm();
    });*/
    document.observe('dom:loaded', function() {
        new Form.Observer('form_planilla', 20, sendForm);
    });
    </script>
{% endblock %}