<?php

namespace Inei\Bundle\AuthBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Security\Core\User\UserProviderInterface;

/**
 * UsuariosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UsuariosRepository extends EntityRepository implements UserProviderInterface
{
    public function listaUsuariosPlanilla($keys = true){
        $DQL = "SELECT u.id, u.username
            FROM IneiAuthBundle:Usuarios u
            JOIN u.roles r
            WHERE r.id in (:role)
            ORDER BY u.id ASC";//AND :perm in p.type 
        $qb = $this->getEntityManager()->createQuery($DQL)
                ->setParameter('role', array(6));
        $re = $qb->getArrayResult();
        if(!$keys){
            $data = array();
            foreach ($re as $item) {
                $data[$item['id']] = $item['username'];
            }
            $re = $data;
        }
        return $re;
    }
    
    public function loadUserByUsername($username)
    {
        echo $username;
        $q = $this
            ->createQueryBuilder('u')
            ->select('u, r')
            ->leftJoin('u.roles', 'r')
            ->where('u.username = :username OR u.email = :email')
            ->setParameter('username', $username)
            ->setParameter('email', $username)
            ->getQuery();
        //print_r($q->getResult());
        return $q->getResult();
    }
    
    public function findOneByPk($pk){
        $q = $this
            ->createQueryBuilder('u')
            ->select('u, r')
            ->leftJoin('u.roles', 'r')
            ->where('u.id = :id')            
            ->setParameter('id', $pk)
            ->getQuery();
        $result = $q->getResult();
        $user = null;
        if(count($result)){
            $user = $result[0];
            $user->setPermissions($this->getPermissions($user->getId()));
        }
        return $user;
    }
    
    public function getPermissions($pk){
        $DQL = "SELECT p,m
            FROM IneiAuthBundle:Permission p
            JOIN p.module m
            JOIN p.role r
            JOIN r.users u
            WHERE u.id = :pk ORDER BY m.order ASC";//AND :perm in p.type 
        $qb = $this->getEntityManager()->createQuery($DQL)
                ->setParameters(array(
            'pk' => is_numeric($pk)?$pk:0,
        ));
        $re = $qb->getArrayResult();
        return $re;
    }

    public function listaTomosAsignados($usuario){
        $sql = "select co_tomo from asignacion where co_asignado=:usuario;";
        $conn = $this->getEntityManager()->getConnection();
        $stmt = $conn->prepare($sql);
        $stmt->bindValue('usuario', $usuario);
        $stmt->execute();
        $re = $stmt->fetchAll();
        $data = array();
        foreach ($re as $item) {
            $data[$item['co_tomo']] = $item['co_tomo'];
        }
        return $data;
    }
    
    public function refreshUser(\Symfony\Component\Security\Core\User\UserInterface $user) {
        $user = $this->findOneByPk($user->getId());
        return $user;
    }

    public function supportsClass($class) {
        return true;
    }    
}
